ARM GAS  /var/folders/kk/4ptrdscs56z2zksmnr2snnnm0000gn/T//ccdlYaYC.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"system_stm32g4xx.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SystemInit,"ax",%progbits
  20              		.align	1
  21              		.global	SystemInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	SystemInit:
  27              	.LFB329:
  28              		.file 1 "Core/Src/system_stm32g4xx.c"
   1:Core/Src/system_stm32g4xx.c **** /**
   2:Core/Src/system_stm32g4xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32g4xx.c ****   * @file    system_stm32g4xx.c
   4:Core/Src/system_stm32g4xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32g4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File
   6:Core/Src/system_stm32g4xx.c ****   *
   7:Core/Src/system_stm32g4xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32g4xx.c ****   *   user application:
   9:Core/Src/system_stm32g4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Core/Src/system_stm32g4xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32g4xx.c ****   *                      the "startup_stm32g4xx.s" file.
  12:Core/Src/system_stm32g4xx.c ****   *
  13:Core/Src/system_stm32g4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Core/Src/system_stm32g4xx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32g4xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32g4xx.c ****   *
  17:Core/Src/system_stm32g4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32g4xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32g4xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32g4xx.c ****   *
  21:Core/Src/system_stm32g4xx.c ****   *   After each device reset the HSI (16 MHz) is used as system clock source.
  22:Core/Src/system_stm32g4xx.c ****   *   Then SystemInit() function is called, in "startup_stm32g4xx.s" file, to
  23:Core/Src/system_stm32g4xx.c ****   *   configure the system clock before to branch to main program.
  24:Core/Src/system_stm32g4xx.c ****   *
  25:Core/Src/system_stm32g4xx.c ****   *   This file configures the system clock as follows:
  26:Core/Src/system_stm32g4xx.c ****   *=============================================================================
  27:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  28:Core/Src/system_stm32g4xx.c ****   *        System Clock source                    | HSI
  29:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  30:Core/Src/system_stm32g4xx.c ****   *        SYSCLK(Hz)                             | 16000000
ARM GAS  /var/folders/kk/4ptrdscs56z2zksmnr2snnnm0000gn/T//ccdlYaYC.s 			page 2


  31:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  32:Core/Src/system_stm32g4xx.c ****   *        HCLK(Hz)                               | 16000000
  33:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  34:Core/Src/system_stm32g4xx.c ****   *        AHB Prescaler                          | 1
  35:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  36:Core/Src/system_stm32g4xx.c ****   *        APB1 Prescaler                         | 1
  37:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  38:Core/Src/system_stm32g4xx.c ****   *        APB2 Prescaler                         | 1
  39:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  40:Core/Src/system_stm32g4xx.c ****   *        PLL_M                                  | 1
  41:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  42:Core/Src/system_stm32g4xx.c ****   *        PLL_N                                  | 16
  43:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  44:Core/Src/system_stm32g4xx.c ****   *        PLL_P                                  | 7
  45:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  46:Core/Src/system_stm32g4xx.c ****   *        PLL_Q                                  | 2
  47:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  48:Core/Src/system_stm32g4xx.c ****   *        PLL_R                                  | 2
  49:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  50:Core/Src/system_stm32g4xx.c ****   *        Require 48MHz for RNG                  | Disabled
  51:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  52:Core/Src/system_stm32g4xx.c ****   *=============================================================================
  53:Core/Src/system_stm32g4xx.c ****   ******************************************************************************
  54:Core/Src/system_stm32g4xx.c ****   * @attention
  55:Core/Src/system_stm32g4xx.c ****   *
  56:Core/Src/system_stm32g4xx.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  57:Core/Src/system_stm32g4xx.c ****   * All rights reserved.</center></h2>
  58:Core/Src/system_stm32g4xx.c ****   *
  59:Core/Src/system_stm32g4xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  60:Core/Src/system_stm32g4xx.c ****   * the "License"; You may not use this file except in compliance with the
  61:Core/Src/system_stm32g4xx.c ****   * License. You may obtain a copy of the License at:
  62:Core/Src/system_stm32g4xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  63:Core/Src/system_stm32g4xx.c ****   *
  64:Core/Src/system_stm32g4xx.c ****   ******************************************************************************
  65:Core/Src/system_stm32g4xx.c ****   */
  66:Core/Src/system_stm32g4xx.c **** 
  67:Core/Src/system_stm32g4xx.c **** /** @addtogroup CMSIS
  68:Core/Src/system_stm32g4xx.c ****   * @{
  69:Core/Src/system_stm32g4xx.c ****   */
  70:Core/Src/system_stm32g4xx.c **** 
  71:Core/Src/system_stm32g4xx.c **** /** @addtogroup stm32g4xx_system
  72:Core/Src/system_stm32g4xx.c ****   * @{
  73:Core/Src/system_stm32g4xx.c ****   */
  74:Core/Src/system_stm32g4xx.c **** 
  75:Core/Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Includes
  76:Core/Src/system_stm32g4xx.c ****   * @{
  77:Core/Src/system_stm32g4xx.c ****   */
  78:Core/Src/system_stm32g4xx.c **** 
  79:Core/Src/system_stm32g4xx.c **** #include "stm32g4xx.h"
  80:Core/Src/system_stm32g4xx.c **** 
  81:Core/Src/system_stm32g4xx.c **** #if !defined  (HSE_VALUE)
  82:Core/Src/system_stm32g4xx.c ****   #define HSE_VALUE     24000000U /*!< Value of the External oscillator in Hz */
  83:Core/Src/system_stm32g4xx.c **** #endif /* HSE_VALUE */
  84:Core/Src/system_stm32g4xx.c **** 
  85:Core/Src/system_stm32g4xx.c **** #if !defined  (HSI_VALUE)
  86:Core/Src/system_stm32g4xx.c ****   #define HSI_VALUE    16000000U /*!< Value of the Internal oscillator in Hz*/
  87:Core/Src/system_stm32g4xx.c **** #endif /* HSI_VALUE */
ARM GAS  /var/folders/kk/4ptrdscs56z2zksmnr2snnnm0000gn/T//ccdlYaYC.s 			page 3


  88:Core/Src/system_stm32g4xx.c **** 
  89:Core/Src/system_stm32g4xx.c **** /**
  90:Core/Src/system_stm32g4xx.c ****   * @}
  91:Core/Src/system_stm32g4xx.c ****   */
  92:Core/Src/system_stm32g4xx.c **** 
  93:Core/Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_TypesDefinitions
  94:Core/Src/system_stm32g4xx.c ****   * @{
  95:Core/Src/system_stm32g4xx.c ****   */
  96:Core/Src/system_stm32g4xx.c **** 
  97:Core/Src/system_stm32g4xx.c **** /**
  98:Core/Src/system_stm32g4xx.c ****   * @}
  99:Core/Src/system_stm32g4xx.c ****   */
 100:Core/Src/system_stm32g4xx.c **** 
 101:Core/Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Defines
 102:Core/Src/system_stm32g4xx.c ****   * @{
 103:Core/Src/system_stm32g4xx.c ****   */
 104:Core/Src/system_stm32g4xx.c **** 
 105:Core/Src/system_stm32g4xx.c **** /************************* Miscellaneous Configuration ************************/
 106:Core/Src/system_stm32g4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 107:Core/Src/system_stm32g4xx.c ****      Internal SRAM. */
 108:Core/Src/system_stm32g4xx.c **** /* #define VECT_TAB_SRAM */
 109:Core/Src/system_stm32g4xx.c **** #define VECT_TAB_OFFSET  0x00UL /*!< Vector Table base offset field.
 110:Core/Src/system_stm32g4xx.c ****                                    This value must be a multiple of 0x200. */
 111:Core/Src/system_stm32g4xx.c **** /******************************************************************************/
 112:Core/Src/system_stm32g4xx.c **** /**
 113:Core/Src/system_stm32g4xx.c ****   * @}
 114:Core/Src/system_stm32g4xx.c ****   */
 115:Core/Src/system_stm32g4xx.c **** 
 116:Core/Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Macros
 117:Core/Src/system_stm32g4xx.c ****   * @{
 118:Core/Src/system_stm32g4xx.c ****   */
 119:Core/Src/system_stm32g4xx.c **** 
 120:Core/Src/system_stm32g4xx.c **** /**
 121:Core/Src/system_stm32g4xx.c ****   * @}
 122:Core/Src/system_stm32g4xx.c ****   */
 123:Core/Src/system_stm32g4xx.c **** 
 124:Core/Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Variables
 125:Core/Src/system_stm32g4xx.c ****   * @{
 126:Core/Src/system_stm32g4xx.c ****   */
 127:Core/Src/system_stm32g4xx.c ****   /* The SystemCoreClock variable is updated in three ways:
 128:Core/Src/system_stm32g4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 129:Core/Src/system_stm32g4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 130:Core/Src/system_stm32g4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 131:Core/Src/system_stm32g4xx.c ****          Note: If you use this function to configure the system clock; then there
 132:Core/Src/system_stm32g4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 133:Core/Src/system_stm32g4xx.c ****                variable is updated automatically.
 134:Core/Src/system_stm32g4xx.c ****   */
 135:Core/Src/system_stm32g4xx.c ****   uint32_t SystemCoreClock = HSI_VALUE;
 136:Core/Src/system_stm32g4xx.c **** 
 137:Core/Src/system_stm32g4xx.c ****   const uint8_t AHBPrescTable[16] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9U
 138:Core/Src/system_stm32g4xx.c ****   const uint8_t APBPrescTable[8] =  {0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U};
 139:Core/Src/system_stm32g4xx.c **** 
 140:Core/Src/system_stm32g4xx.c **** /**
 141:Core/Src/system_stm32g4xx.c ****   * @}
 142:Core/Src/system_stm32g4xx.c ****   */
 143:Core/Src/system_stm32g4xx.c **** 
 144:Core/Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_FunctionPrototypes
ARM GAS  /var/folders/kk/4ptrdscs56z2zksmnr2snnnm0000gn/T//ccdlYaYC.s 			page 4


 145:Core/Src/system_stm32g4xx.c ****   * @{
 146:Core/Src/system_stm32g4xx.c ****   */
 147:Core/Src/system_stm32g4xx.c **** 
 148:Core/Src/system_stm32g4xx.c **** /**
 149:Core/Src/system_stm32g4xx.c ****   * @}
 150:Core/Src/system_stm32g4xx.c ****   */
 151:Core/Src/system_stm32g4xx.c **** 
 152:Core/Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Functions
 153:Core/Src/system_stm32g4xx.c ****   * @{
 154:Core/Src/system_stm32g4xx.c ****   */
 155:Core/Src/system_stm32g4xx.c **** 
 156:Core/Src/system_stm32g4xx.c **** /**
 157:Core/Src/system_stm32g4xx.c ****   * @brief  Setup the microcontroller system.
 158:Core/Src/system_stm32g4xx.c ****   * @param  None
 159:Core/Src/system_stm32g4xx.c ****   * @retval None
 160:Core/Src/system_stm32g4xx.c ****   */
 161:Core/Src/system_stm32g4xx.c **** 
 162:Core/Src/system_stm32g4xx.c **** void SystemInit(void)
 163:Core/Src/system_stm32g4xx.c **** {
  29              		.loc 1 163 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 164:Core/Src/system_stm32g4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 165:Core/Src/system_stm32g4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 166:Core/Src/system_stm32g4xx.c ****     SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
  34              		.loc 1 166 5 view .LVU1
  35              		.loc 1 166 16 is_stmt 0 view .LVU2
  36 0000 054B     		ldr	r3, .L2
  37 0002 D3F88820 		ldr	r2, [r3, #136]
  38 0006 42F47002 		orr	r2, r2, #15728640
  39 000a C3F88820 		str	r2, [r3, #136]
 167:Core/Src/system_stm32g4xx.c ****   #endif
 168:Core/Src/system_stm32g4xx.c **** 
 169:Core/Src/system_stm32g4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 170:Core/Src/system_stm32g4xx.c **** #ifdef VECT_TAB_SRAM
 171:Core/Src/system_stm32g4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 172:Core/Src/system_stm32g4xx.c **** #else
 173:Core/Src/system_stm32g4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
  40              		.loc 1 173 3 is_stmt 1 view .LVU3
  41              		.loc 1 173 13 is_stmt 0 view .LVU4
  42 000e 4FF00062 		mov	r2, #134217728
  43 0012 9A60     		str	r2, [r3, #8]
 174:Core/Src/system_stm32g4xx.c **** #endif
 175:Core/Src/system_stm32g4xx.c **** }
  44              		.loc 1 175 1 view .LVU5
  45 0014 7047     		bx	lr
  46              	.L3:
  47 0016 00BF     		.align	2
  48              	.L2:
  49 0018 00ED00E0 		.word	-536810240
  50              		.cfi_endproc
  51              	.LFE329:
  53              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  54              		.align	1
  55              		.global	SystemCoreClockUpdate
ARM GAS  /var/folders/kk/4ptrdscs56z2zksmnr2snnnm0000gn/T//ccdlYaYC.s 			page 5


  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  60              	SystemCoreClockUpdate:
  61              	.LFB330:
 176:Core/Src/system_stm32g4xx.c **** 
 177:Core/Src/system_stm32g4xx.c **** /**
 178:Core/Src/system_stm32g4xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 179:Core/Src/system_stm32g4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 180:Core/Src/system_stm32g4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 181:Core/Src/system_stm32g4xx.c ****   *         other parameters.
 182:Core/Src/system_stm32g4xx.c ****   *
 183:Core/Src/system_stm32g4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 184:Core/Src/system_stm32g4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 185:Core/Src/system_stm32g4xx.c ****   *         based on this variable will be incorrect.
 186:Core/Src/system_stm32g4xx.c ****   *
 187:Core/Src/system_stm32g4xx.c ****   * @note   - The system frequency computed by this function is not the real
 188:Core/Src/system_stm32g4xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 189:Core/Src/system_stm32g4xx.c ****   *           constant and the selected clock source:
 190:Core/Src/system_stm32g4xx.c ****   *
 191:Core/Src/system_stm32g4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 192:Core/Src/system_stm32g4xx.c ****   *
 193:Core/Src/system_stm32g4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 194:Core/Src/system_stm32g4xx.c ****   *
 195:Core/Src/system_stm32g4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(***)
 196:Core/Src/system_stm32g4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 197:Core/Src/system_stm32g4xx.c ****   *
 198:Core/Src/system_stm32g4xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32g4xx_hal.h file (default value
 199:Core/Src/system_stm32g4xx.c ****   *              16 MHz) but the real value may vary depending on the variations
 200:Core/Src/system_stm32g4xx.c ****   *              in voltage and temperature.
 201:Core/Src/system_stm32g4xx.c ****   *
 202:Core/Src/system_stm32g4xx.c ****   *         (***) HSE_VALUE is a constant defined in stm32g4xx_hal.h file (default value
 203:Core/Src/system_stm32g4xx.c ****   *              24 MHz), user has to ensure that HSE_VALUE is same as the real
 204:Core/Src/system_stm32g4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 205:Core/Src/system_stm32g4xx.c ****   *              have wrong result.
 206:Core/Src/system_stm32g4xx.c ****   *
 207:Core/Src/system_stm32g4xx.c ****   *         - The result of this function could be not correct when using fractional
 208:Core/Src/system_stm32g4xx.c ****   *           value for HSE crystal.
 209:Core/Src/system_stm32g4xx.c ****   *
 210:Core/Src/system_stm32g4xx.c ****   * @param  None
 211:Core/Src/system_stm32g4xx.c ****   * @retval None
 212:Core/Src/system_stm32g4xx.c ****   */
 213:Core/Src/system_stm32g4xx.c **** void SystemCoreClockUpdate(void)
 214:Core/Src/system_stm32g4xx.c **** {
  62              		.loc 1 214 1 is_stmt 1 view -0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
 215:Core/Src/system_stm32g4xx.c ****   uint32_t tmp, pllvco, pllr, pllsource, pllm;
  67              		.loc 1 215 3 view .LVU7
 216:Core/Src/system_stm32g4xx.c **** 
 217:Core/Src/system_stm32g4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 218:Core/Src/system_stm32g4xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
  68              		.loc 1 218 3 view .LVU8
  69              		.loc 1 218 14 is_stmt 0 view .LVU9
  70 0000 1E4B     		ldr	r3, .L12
ARM GAS  /var/folders/kk/4ptrdscs56z2zksmnr2snnnm0000gn/T//ccdlYaYC.s 			page 6


  71 0002 9B68     		ldr	r3, [r3, #8]
  72              		.loc 1 218 21 view .LVU10
  73 0004 03F00C03 		and	r3, r3, #12
  74              		.loc 1 218 3 view .LVU11
  75 0008 082B     		cmp	r3, #8
  76 000a 12D0     		beq	.L5
  77 000c 0C2B     		cmp	r3, #12
  78 000e 14D0     		beq	.L6
  79 0010 042B     		cmp	r3, #4
  80 0012 0AD0     		beq	.L10
  81              	.L7:
 219:Core/Src/system_stm32g4xx.c ****   {
 220:Core/Src/system_stm32g4xx.c ****     case 0x04:  /* HSI used as system clock source */
 221:Core/Src/system_stm32g4xx.c ****       SystemCoreClock = HSI_VALUE;
 222:Core/Src/system_stm32g4xx.c ****       break;
 223:Core/Src/system_stm32g4xx.c **** 
 224:Core/Src/system_stm32g4xx.c ****     case 0x08:  /* HSE used as system clock source */
 225:Core/Src/system_stm32g4xx.c ****       SystemCoreClock = HSE_VALUE;
 226:Core/Src/system_stm32g4xx.c ****       break;
 227:Core/Src/system_stm32g4xx.c **** 
 228:Core/Src/system_stm32g4xx.c ****     case 0x0C:  /* PLL used as system clock  source */
 229:Core/Src/system_stm32g4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
 230:Core/Src/system_stm32g4xx.c ****          SYSCLK = PLL_VCO / PLLR
 231:Core/Src/system_stm32g4xx.c ****          */
 232:Core/Src/system_stm32g4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 233:Core/Src/system_stm32g4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4) + 1U ;
 234:Core/Src/system_stm32g4xx.c ****       if (pllsource == 0x02UL) /* HSI used as PLL clock source */
 235:Core/Src/system_stm32g4xx.c ****       {
 236:Core/Src/system_stm32g4xx.c ****         pllvco = (HSI_VALUE / pllm);
 237:Core/Src/system_stm32g4xx.c ****       }
 238:Core/Src/system_stm32g4xx.c ****       else                   /* HSE used as PLL clock source */
 239:Core/Src/system_stm32g4xx.c ****       {
 240:Core/Src/system_stm32g4xx.c ****         pllvco = (HSE_VALUE / pllm);
 241:Core/Src/system_stm32g4xx.c ****       }
 242:Core/Src/system_stm32g4xx.c ****       pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 8);
 243:Core/Src/system_stm32g4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25) + 1U) * 2U;
 244:Core/Src/system_stm32g4xx.c ****       SystemCoreClock = pllvco/pllr;
 245:Core/Src/system_stm32g4xx.c ****       break;
 246:Core/Src/system_stm32g4xx.c **** 
 247:Core/Src/system_stm32g4xx.c ****     default:
 248:Core/Src/system_stm32g4xx.c ****       break;
 249:Core/Src/system_stm32g4xx.c ****   }
 250:Core/Src/system_stm32g4xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 251:Core/Src/system_stm32g4xx.c ****   /* Get HCLK prescaler */
 252:Core/Src/system_stm32g4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
  82              		.loc 1 252 3 is_stmt 1 view .LVU12
  83              		.loc 1 252 28 is_stmt 0 view .LVU13
  84 0014 194B     		ldr	r3, .L12
  85 0016 9B68     		ldr	r3, [r3, #8]
  86              		.loc 1 252 52 view .LVU14
  87 0018 C3F30313 		ubfx	r3, r3, #4, #4
  88              		.loc 1 252 22 view .LVU15
  89 001c 184A     		ldr	r2, .L12+4
  90 001e D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
  91              	.LVL0:
 253:Core/Src/system_stm32g4xx.c ****   /* HCLK clock frequency */
 254:Core/Src/system_stm32g4xx.c ****   SystemCoreClock >>= tmp;
ARM GAS  /var/folders/kk/4ptrdscs56z2zksmnr2snnnm0000gn/T//ccdlYaYC.s 			page 7


  92              		.loc 1 254 3 is_stmt 1 view .LVU16
  93              		.loc 1 254 19 is_stmt 0 view .LVU17
  94 0020 184A     		ldr	r2, .L12+8
  95 0022 1368     		ldr	r3, [r2]
  96 0024 CB40     		lsrs	r3, r3, r1
  97 0026 1360     		str	r3, [r2]
 255:Core/Src/system_stm32g4xx.c **** }
  98              		.loc 1 255 1 view .LVU18
  99 0028 7047     		bx	lr
 100              	.LVL1:
 101              	.L10:
 221:Core/Src/system_stm32g4xx.c ****       break;
 102              		.loc 1 221 7 is_stmt 1 view .LVU19
 221:Core/Src/system_stm32g4xx.c ****       break;
 103              		.loc 1 221 23 is_stmt 0 view .LVU20
 104 002a 164B     		ldr	r3, .L12+8
 105 002c 164A     		ldr	r2, .L12+12
 106 002e 1A60     		str	r2, [r3]
 222:Core/Src/system_stm32g4xx.c **** 
 107              		.loc 1 222 7 is_stmt 1 view .LVU21
 108 0030 F0E7     		b	.L7
 109              	.L5:
 225:Core/Src/system_stm32g4xx.c ****       break;
 110              		.loc 1 225 7 view .LVU22
 225:Core/Src/system_stm32g4xx.c ****       break;
 111              		.loc 1 225 23 is_stmt 0 view .LVU23
 112 0032 144B     		ldr	r3, .L12+8
 113 0034 154A     		ldr	r2, .L12+16
 114 0036 1A60     		str	r2, [r3]
 226:Core/Src/system_stm32g4xx.c **** 
 115              		.loc 1 226 7 is_stmt 1 view .LVU24
 116 0038 ECE7     		b	.L7
 117              	.L6:
 232:Core/Src/system_stm32g4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4) + 1U ;
 118              		.loc 1 232 7 view .LVU25
 232:Core/Src/system_stm32g4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4) + 1U ;
 119              		.loc 1 232 23 is_stmt 0 view .LVU26
 120 003a 104B     		ldr	r3, .L12
 121 003c DA68     		ldr	r2, [r3, #12]
 232:Core/Src/system_stm32g4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4) + 1U ;
 122              		.loc 1 232 17 view .LVU27
 123 003e 02F00302 		and	r2, r2, #3
 124              	.LVL2:
 233:Core/Src/system_stm32g4xx.c ****       if (pllsource == 0x02UL) /* HSI used as PLL clock source */
 125              		.loc 1 233 7 is_stmt 1 view .LVU28
 233:Core/Src/system_stm32g4xx.c ****       if (pllsource == 0x02UL) /* HSI used as PLL clock source */
 126              		.loc 1 233 19 is_stmt 0 view .LVU29
 127 0042 DB68     		ldr	r3, [r3, #12]
 233:Core/Src/system_stm32g4xx.c ****       if (pllsource == 0x02UL) /* HSI used as PLL clock source */
 128              		.loc 1 233 49 view .LVU30
 129 0044 C3F30313 		ubfx	r3, r3, #4, #4
 233:Core/Src/system_stm32g4xx.c ****       if (pllsource == 0x02UL) /* HSI used as PLL clock source */
 130              		.loc 1 233 12 view .LVU31
 131 0048 0133     		adds	r3, r3, #1
 132              	.LVL3:
 234:Core/Src/system_stm32g4xx.c ****       {
 133              		.loc 1 234 7 is_stmt 1 view .LVU32
ARM GAS  /var/folders/kk/4ptrdscs56z2zksmnr2snnnm0000gn/T//ccdlYaYC.s 			page 8


 234:Core/Src/system_stm32g4xx.c ****       {
 134              		.loc 1 234 10 is_stmt 0 view .LVU33
 135 004a 022A     		cmp	r2, #2
 136 004c 12D0     		beq	.L11
 240:Core/Src/system_stm32g4xx.c ****       }
 137              		.loc 1 240 9 is_stmt 1 view .LVU34
 240:Core/Src/system_stm32g4xx.c ****       }
 138              		.loc 1 240 16 is_stmt 0 view .LVU35
 139 004e 0F4A     		ldr	r2, .L12+16
 140              	.LVL4:
 240:Core/Src/system_stm32g4xx.c ****       }
 141              		.loc 1 240 16 view .LVU36
 142 0050 B2FBF3F2 		udiv	r2, r2, r3
 143              	.LVL5:
 144              	.L9:
 242:Core/Src/system_stm32g4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25) + 1U) * 2U;
 145              		.loc 1 242 7 is_stmt 1 view .LVU37
 242:Core/Src/system_stm32g4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25) + 1U) * 2U;
 146              		.loc 1 242 30 is_stmt 0 view .LVU38
 147 0054 0949     		ldr	r1, .L12
 148 0056 CB68     		ldr	r3, [r1, #12]
 149              	.LVL6:
 242:Core/Src/system_stm32g4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25) + 1U) * 2U;
 150              		.loc 1 242 60 view .LVU39
 151 0058 C3F30623 		ubfx	r3, r3, #8, #7
 242:Core/Src/system_stm32g4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25) + 1U) * 2U;
 152              		.loc 1 242 14 view .LVU40
 153 005c 02FB03F3 		mul	r3, r2, r3
 154              	.LVL7:
 243:Core/Src/system_stm32g4xx.c ****       SystemCoreClock = pllvco/pllr;
 155              		.loc 1 243 7 is_stmt 1 view .LVU41
 243:Core/Src/system_stm32g4xx.c ****       SystemCoreClock = pllvco/pllr;
 156              		.loc 1 243 20 is_stmt 0 view .LVU42
 157 0060 CA68     		ldr	r2, [r1, #12]
 243:Core/Src/system_stm32g4xx.c ****       SystemCoreClock = pllvco/pllr;
 158              		.loc 1 243 50 view .LVU43
 159 0062 C2F34162 		ubfx	r2, r2, #25, #2
 243:Core/Src/system_stm32g4xx.c ****       SystemCoreClock = pllvco/pllr;
 160              		.loc 1 243 57 view .LVU44
 161 0066 0132     		adds	r2, r2, #1
 243:Core/Src/system_stm32g4xx.c ****       SystemCoreClock = pllvco/pllr;
 162              		.loc 1 243 12 view .LVU45
 163 0068 5200     		lsls	r2, r2, #1
 164              	.LVL8:
 244:Core/Src/system_stm32g4xx.c ****       break;
 165              		.loc 1 244 7 is_stmt 1 view .LVU46
 244:Core/Src/system_stm32g4xx.c ****       break;
 166              		.loc 1 244 31 is_stmt 0 view .LVU47
 167 006a B3FBF2F3 		udiv	r3, r3, r2
 168              	.LVL9:
 244:Core/Src/system_stm32g4xx.c ****       break;
 169              		.loc 1 244 23 view .LVU48
 170 006e 054A     		ldr	r2, .L12+8
 171              	.LVL10:
 244:Core/Src/system_stm32g4xx.c ****       break;
 172              		.loc 1 244 23 view .LVU49
 173 0070 1360     		str	r3, [r2]
ARM GAS  /var/folders/kk/4ptrdscs56z2zksmnr2snnnm0000gn/T//ccdlYaYC.s 			page 9


 245:Core/Src/system_stm32g4xx.c **** 
 174              		.loc 1 245 7 is_stmt 1 view .LVU50
 175 0072 CFE7     		b	.L7
 176              	.LVL11:
 177              	.L11:
 236:Core/Src/system_stm32g4xx.c ****       }
 178              		.loc 1 236 9 view .LVU51
 236:Core/Src/system_stm32g4xx.c ****       }
 179              		.loc 1 236 16 is_stmt 0 view .LVU52
 180 0074 044A     		ldr	r2, .L12+12
 181              	.LVL12:
 236:Core/Src/system_stm32g4xx.c ****       }
 182              		.loc 1 236 16 view .LVU53
 183 0076 B2FBF3F2 		udiv	r2, r2, r3
 184              	.LVL13:
 236:Core/Src/system_stm32g4xx.c ****       }
 185              		.loc 1 236 16 view .LVU54
 186 007a EBE7     		b	.L9
 187              	.L13:
 188              		.align	2
 189              	.L12:
 190 007c 00100240 		.word	1073876992
 191 0080 00000000 		.word	.LANCHOR1
 192 0084 00000000 		.word	.LANCHOR0
 193 0088 0024F400 		.word	16000000
 194 008c 00127A00 		.word	8000000
 195              		.cfi_endproc
 196              	.LFE330:
 198              		.global	APBPrescTable
 199              		.global	AHBPrescTable
 200              		.global	SystemCoreClock
 201              		.section	.data.SystemCoreClock,"aw"
 202              		.align	2
 203              		.set	.LANCHOR0,. + 0
 206              	SystemCoreClock:
 207 0000 0024F400 		.word	16000000
 208              		.section	.rodata.AHBPrescTable,"a"
 209              		.align	2
 210              		.set	.LANCHOR1,. + 0
 213              	AHBPrescTable:
 214 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
 214      00000000 
 214      01020304 
 214      06
 215 000d 070809   		.ascii	"\007\010\011"
 216              		.section	.rodata.APBPrescTable,"a"
 217              		.align	2
 220              	APBPrescTable:
 221 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
 221      01020304 
 222              		.text
 223              	.Letext0:
 224              		.file 2 "/Applications/ARM/arm-none-eabi/include/machine/_default_types.h"
 225              		.file 3 "/Applications/ARM/arm-none-eabi/include/sys/_stdint.h"
 226              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 227              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 228              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
ARM GAS  /var/folders/kk/4ptrdscs56z2zksmnr2snnnm0000gn/T//ccdlYaYC.s 			page 10


ARM GAS  /var/folders/kk/4ptrdscs56z2zksmnr2snnnm0000gn/T//ccdlYaYC.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32g4xx.c
/var/folders/kk/4ptrdscs56z2zksmnr2snnnm0000gn/T//ccdlYaYC.s:20     .text.SystemInit:0000000000000000 $t
/var/folders/kk/4ptrdscs56z2zksmnr2snnnm0000gn/T//ccdlYaYC.s:26     .text.SystemInit:0000000000000000 SystemInit
/var/folders/kk/4ptrdscs56z2zksmnr2snnnm0000gn/T//ccdlYaYC.s:49     .text.SystemInit:0000000000000018 $d
/var/folders/kk/4ptrdscs56z2zksmnr2snnnm0000gn/T//ccdlYaYC.s:54     .text.SystemCoreClockUpdate:0000000000000000 $t
/var/folders/kk/4ptrdscs56z2zksmnr2snnnm0000gn/T//ccdlYaYC.s:60     .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
/var/folders/kk/4ptrdscs56z2zksmnr2snnnm0000gn/T//ccdlYaYC.s:190    .text.SystemCoreClockUpdate:000000000000007c $d
/var/folders/kk/4ptrdscs56z2zksmnr2snnnm0000gn/T//ccdlYaYC.s:220    .rodata.APBPrescTable:0000000000000000 APBPrescTable
/var/folders/kk/4ptrdscs56z2zksmnr2snnnm0000gn/T//ccdlYaYC.s:213    .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
/var/folders/kk/4ptrdscs56z2zksmnr2snnnm0000gn/T//ccdlYaYC.s:206    .data.SystemCoreClock:0000000000000000 SystemCoreClock
/var/folders/kk/4ptrdscs56z2zksmnr2snnnm0000gn/T//ccdlYaYC.s:202    .data.SystemCoreClock:0000000000000000 $d
/var/folders/kk/4ptrdscs56z2zksmnr2snnnm0000gn/T//ccdlYaYC.s:209    .rodata.AHBPrescTable:0000000000000000 $d
/var/folders/kk/4ptrdscs56z2zksmnr2snnnm0000gn/T//ccdlYaYC.s:217    .rodata.APBPrescTable:0000000000000000 $d

NO UNDEFINED SYMBOLS
